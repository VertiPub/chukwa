create table if not exists node_activity_template 
(
    timestamp  timestamp default CURRENT_TIMESTAMP,
    used int(11) default NULL,
    usedMachines text,
    free int(11) default NULL,
    freeMachines text,
    down int(11) default NULL,
    downMachines text,
    primary key(timestamp),
    index (Timestamp)
);

create table if not exists switch_data_template (
    timestamp timestamp default CURRENT_TIMESTAMP,
    host varchar(40),
    port varchar(10),
    poller varchar(40),
    metricName varchar(20),
    value double,
    primary key(timestamp, host, port),
    index (Timestamp)
);

create table if not exists system_metrics_template (
    timestamp  timestamp default CURRENT_TIMESTAMP,
    host varchar(40),
    load_15 double, 
    load_5 double,
    load_1 double,
    task_total double,
    task_running double,
    task_sleep double,
    task_stopped double,
    task_zombie double,
    mem_total double,
    mem_buffers double,
    mem_cached double,
    mem_used double,
    mem_free double,
    eth0_rxerrs double,
    eth0_rxbyts double,
    eth0_rxpcks double,
    eth0_rxdrops double,
    eth0_txerrs double,
    eth0_txbyts double,
    eth0_txpcks double,
    eth0_txdrops double,
    eth1_rxerrs double,
    eth1_rxbyts double,
    eth1_rxpcks double,
    eth1_rxdrops double,
    eth1_txerrs double,
    eth1_txbyts double,
    eth1_txpcks double,
    eth1_txdrops double,
    sda_rkbs double,
    sda_wkbs double,
    sdb_rkbs double,
    sdb_wkbs double,
    sdc_rkbs double,
    sdc_wkbs double,
    sdd_rkbs double,
    sdd_wkbs double,
    cpu_idle_pcnt float,
    cpu_nice_pcnt float,
    cpu_system_pcnt float,
    cpu_user_pcnt float,
    cpu_hirq_pcnt float,
    cpu_sirq_pcnt float,
    iowait_pcnt float,
    mem_buffers_pcnt float,
    mem_used_pcnt float,
    eth0_busy_pcnt float,
    eth1_busy_pcnt float,
    sda_busy_pcnt float,
    sdb_busy_pcnt float,
    sdc_busy_pcnt float,
    sdd_busy_pcnt float,
    swap_used_pcnt float,
    primary key(host, timestamp),
    index (timestamp)
);

create table if not exists disk_template (
    timestamp  timestamp default CURRENT_TIMESTAMP,
    host varchar(40),
    mount varchar(40),
    used double,
    available double,
    used_percent double,
    fs varchar(40),
    primary key(timestamp,host,mount),
    index (timestamp)
);

create table if not exists cluster_disk_template (
    timestamp  timestamp default CURRENT_TIMESTAMP,
    mount varchar(40),
    used double,
    available double,
    used_percent double,
    primary key(timestamp,mount),
    index (timestamp)
);

create table if not exists cluster_system_metrics_template (
    timestamp  timestamp default CURRENT_TIMESTAMP,
    host int,
    load_15 double, 
    load_5 double,
    load_1 double,
    task_total double,
    task_running double,
    task_sleep double,
    task_stopped double,
    task_zombie double,
    mem_total double,
    mem_buffers double,
    mem_cached double,
    mem_used double,
    mem_free double,
    eth0_rxerrs double,
    eth0_rxbyts double,
    eth0_rxpcks double,
    eth0_rxdrops double,
    eth0_txerrs double,
    eth0_txbyts double,
    eth0_txpcks double,
    eth0_txdrops double,
    eth1_rxerrs double,
    eth1_rxbyts double,
    eth1_rxpcks double,
    eth1_rxdrops double,
    eth1_txerrs double,
    eth1_txbyts double,
    eth1_txpcks double,
    eth1_txdrops double,
    sda_rkbs double,
    sda_wkbs double,
    sdb_rkbs double,
    sdb_wkbs double,
    sdc_rkbs double,
    sdc_wkbs double,
    sdd_rkbs double,
    sdd_wkbs double,
    cpu_idle_pcnt float,
    cpu_nice_pcnt float,
    cpu_system_pcnt float,
    cpu_user_pcnt float,
    cpu_hirq_pcnt float,
    cpu_sirq_pcnt float,
    iowait_pcnt float,
    mem_buffers_pcnt float,
    mem_used_pcnt float,
    eth0_busy_pcnt float,
    eth1_busy_pcnt float,
    sda_busy_pcnt float,
    sdb_busy_pcnt float,
    sdc_busy_pcnt float,
    sdd_busy_pcnt float,
    swap_used_pcnt float,
    primary key(timestamp),
    index (timestamp)
);

create table if not exists dfs_namenode_template (
    timestamp timestamp default 0,
    host varchar(80),
    add_block_ops double,
    blocks_corrupted double,
    create_file_ops double,
    delete_file_ops double,
    files_created double,
    files_renamed double,
    files_deleted double,
    get_block_locations double,
    get_listing_ops double,
    safe_mode_time double,
    syncs_avg_time double,
    syncs_num_ops double,
    transactions_avg_time double,
    transactions_num_ops double,
    block_report_avg_time double,
    block_report_num_ops double,
    fs_image_load_time double,
    primary key(timestamp, host),
    index(timeStamp)
);

create table if not exists dfs_datanode_template (
    timestamp timestamp default 0,
    host varchar(80),
    block_reports_avg_time double,
    block_reports_num_ops double,
    block_verification_failures double,
    blocks_read double,
    blocks_removed double,
    blocks_replicated double,
    blocks_verified double,
    blocks_written double,
    bytes_read double,
    bytes_written double,
    copy_block_op_avg_time double,
    copy_block_op_num_ops double,
    heart_beats_avg_time double,
    heart_beats_num_ops double,
    read_block_op_avg_time double,
    read_block_op_num_ops double,
    read_metadata_op_avg_time double,
    read_metadata_op_num_ops double,
    reads_from_local_client double,
    reads_from_remote_client double,
    replace_block_op_avg_time double,
    replace_block_op_num_ops double,
    session_id double,
    write_block_op_avg_time double,
    write_block_op_num_ops double,
    writes_from_local_client double,
    writes_from_remote_client double,
    primary key(timestamp, host),
    index(timestamp)
);

create table if not exists dfs_fsnamesystem_template (
    timestamp timestamp default 0,
    host VARCHAR(80),
    blocks_total double,
    capacity_remaining_gb double,
    capacity_total_gb double,
    capacity_used_gb double,
    files_total double,
    pending_replication_blocks double,
    scheduled_replication_blocks double,
    total_load double,
    under_replicated_blocks double,
    primary key(timestamp, host),
    index(timestamp)
);

create table if not exists dfs_throughput_template (
    timestamp timestamp default 0,
    host int,
    block_reports_avg_time double,
    block_reports_num_ops double,
    block_verification_failures double,
    blocks_read double,
    blocks_removed double,
    blocks_replicated double,
    blocks_verified double,
    blocks_written double,
    bytes_read double,
    bytes_written double,
    copy_block_op_avg_time double,
    copy_block_op_num_ops double,
    heart_beats_avg_time double,
    heart_beats_num_ops double,
    read_block_op_avg_time double,
    read_block_op_num_ops double,
    read_metadata_op_avg_time double,
    read_metadata_op_num_ops double,
    reads_from_local_client double,
    reads_from_remote_client double,
    replace_block_op_avg_time double,
    replace_block_op_num_ops double,
    session_id double,
    write_block_op_avg_time double,
    write_block_op_num_ops double,
    writes_from_local_client double,
    writes_from_remote_client double,
    primary key(timestamp),
    index(timestamp)
);

create table if not exists hadoop_jvm_template (
    timestamp timestamp default 0,
    host VARCHAR(80),
    process_name VARCHAR(80),
    gc_timemillis double,
    gc_count double,
    log_error double,
    log_fatal double,
    log_info double,
    log_warn double,
    mem_heap_committed_m double,
    mem_heap_used_m double,
    mem_non_heap_committed_m double,
    mem_non_heap_used_m double,
    threads_blocked double,
    threads_new double,
    threads_runnable double,
    threads_terminated double,
    threads_timed_waiting double,
    threads_waiting double,
    primary key (timestamp, host, process_name),
    index(timestamp)
);

create table if not exists hadoop_mapred_template (
    timestamp timestamp default 0,
    host VARCHAR(80),
    jobs_completed double,
    jobs_submitted double,
    maps_completed double,
    maps_launched double,
    reduces_completed double,
    reduces_launched double,
    primary key (timestamp, host),
    index(timestamp)
);

create table if not exists hadoop_rpc_template (
    timestamp timestamp default 0,
    host VARCHAR(80),
    rpc_processing_time_avg_time double,
    rpc_processing_time_num_ops double,
    rpc_queue_time_avg_time double,
    rpc_queue_time_num_ops double,
    get_build_version_avg_time double,
    get_build_version_num_ops double,
    get_job_counters_avg_time double,
    get_job_counters_num_ops double,
    get_job_profile_avg_time double,
    get_job_profile_num_ops double,
    get_job_status_avg_time double,
    get_job_status_num_ops double,
    get_new_job_id_avg_time double,
    get_new_job_id_num_ops double,
    get_protocol_version_avg_time double,
    get_protocol_version_num_ops double,
    get_system_dir_avg_time double,
    get_system_dir_num_ops double,
    get_task_completion_events_avg_time double,
    get_task_completion_events_num_ops double,
    get_task_diagnostics_avg_time double,
    get_task_diagnostics_num_ops double,
    heartbeat_avg_time double,
    heartbeat_num_ops double,
    killJob_avg_time double,
    killJob_num_ops double,
    submit_job_avg_time double,
    submit_job_num_ops double,
    primary key (timestamp, host),
    index(timestamp)
);

create table if not exists cluster_hadoop_rpc_template (
    timestamp timestamp default 0,
    host int,
    rpc_processing_time_avg_time double,
    rpc_processing_time_num_ops double,
    rpc_queue_time_avg_time double,
    rpc_queue_time_num_ops double,
    get_build_version_avg_time double,
    get_build_version_num_ops double,
    get_job_counters_avg_time double,
    get_job_counters_num_ops double,
    get_job_profile_avg_time double,
    get_job_profile_num_ops double,
    get_job_status_avg_time double,
    get_job_status_num_ops double,
    get_new_job_id_avg_time double,
    get_new_job_id_num_ops double,
    get_protocol_version_avg_time double,
    get_protocol_version_num_ops double,
    get_system_dir_avg_time double,
    get_system_dir_num_ops double,
    get_task_completion_events_avg_time double,
    get_task_completion_events_num_ops double,
    get_task_diagnostics_avg_time double,
    get_task_diagnostics_num_ops double,
    heartbeat_avg_time double,
    heartbeat_num_ops double,
    killJob_avg_time double,
    killJob_num_ops double,
    submit_job_avg_time double,
    submit_job_num_ops double,
    primary key (timestamp),
    index(timestamp)
);

create table if not exists hadoop_rpc_calls_template (
    timestamp timestamp default 0,
    method varchar(80),
    calls double,
    primary key(timestamp, method),
    index(timestamp)
);

create table if not exists mssrgraph_template (
    timestamp timestamp default 0,
    job_id VARCHAR(80),
    type VARCHAR(10),
    count double,
    primary key (timestamp, job_id),
    index(timestamp)
);

create table if not exists mr_job(
    HodID varchar(20),
    MRJobID varchar(80),
    MRJobName varchar(100),
    STATUS varchar(10),
    SUBMIT_TIME timestamp default 0,
    LAUNCH_TIME timestamp default 0,
    FINISH_TIME timestamp default 0,
    MAPPER_PHASE_END_TIME timestamp default 0,
    TOTAL_MAPS int unsigned,
    TOTAL_REDUCES int unsigned,
    FINISHED_MAPS  int unsigned,
    FINISHED_REDUCES  int unsigned,      
    NumOfLocalSplits int unsigned,
    NumOfRackLocalSplits int unsigned,
    NUM_OF_MAPPER_ATTEMPTS int unsigned,
    NUM_OF_REDUCER_ATTEMPTS int unsigned,
    MAPPER_PHASE_EXECUTION_TIME int,
    AvgMapperExecutionTime int unsigned,
    AvgLocalMapperExecutionTime int unsigned,
    AvgRackLocalMapperExecutionTime int unsigned,
    AvgRemoteMapperExecutionTime int unsigned,
    AvgReducerExecutionTime int unsigned,
    AvgShuffleExecutionTime int unsigned,
    AvgSortExecutionTime int unsigned,
    MapperClass varchar(80),
    ReducerClass varchar(80),
    PartitionerClass varchar(80),
    CombinerClass varchar(80),
    InputFormatClass varchar(80),
    InputKeyClass varchar(80),
    InputValueClass varchar(80),
    OutputFormatClass varchar(80),
    OutputCompressed tinyint,
    OutputCompressionType  varchar(20),
    OutputCompressionCodec varchar(20),
    OutputKeyClass varchar(80),
    OutputValueClass varchar(80),
    MapOutputKeyClass varchar(80),
    MapOutputValueClass varchar(80),
    MapOutputCompressed tinyint,
    MapOutputCompressionType  varchar(20),
    MapOutputCompressionCodec varchar(20),
    InputDataSizeInMB int unsigned,
    MapOutputSizeInMB int unsigned,
    OutputDataSizeInMB int unsigned,
    MR_JOBCONF  text, 
    InputDir  text, 
    primary key(SUBMIT_TIME, HodID, MRJobID),
    index(SUBMIT_TIME)
);

create table if not exists mr_job_counters_template (
    timestamp timestamp default 0,
    job_id BIGINT,
    hdfs_bytes_read double,
    hdfs_bytes_written double,
    local_bytes_read double,
    local_bytes_written double,
    data_local_map_tasks double,
    launched_map_tasks double,
    launched_reduce_tasks double,
    combine_input_records double,
    combine_output_records double,
    map_input_bytes double,
    map_output_bytes double,
    map_input_records double,
    map_output_records double,
    reduce_input_groups double,
    reduce_input_records double,
    reduce_output_records double,
    primary key (timestamp, job_id),
    index(timestamp)
);

create table if not exists mr_job_timeline_template (
    timestamp timestamp default CURRENT_TIMESTAMP,
    mr_job_id varchar(80),
    task_type varchar(20),
    tasks double,
    time double,
    primary key(timestamp, mr_job_id),
    index(timestamp)
);

create table if not exists mr_finish_time_vs_size_template (
    timestamp timestamp default CURRENT_TIMESTAMP,
    mr_job_id varchar(80),
    task_type varchar(20),
    size double,
    time double,
    primary key(timestamp, mr_job_id),
    index(timestamp)
);
    
create table if not exists hod_machine_template (
    hodid varchar(20) not null, 
    host varchar(40) not null,
    index(HodId)
);

create table if not exists HodJob_template (
    HodID varchar(20), 
    UserID varchar(20), 
    Status  smallint,
    JobTracker varchar(40), 
    TimeQueued mediumint unsigned,
    StartTime timestamp default CURRENT_TIMESTAMP, 
    EndTime timestamp default 0,  
    NumOfMachines smallint unsigned,  
    SlotLimitPerTracker smallint unsigned,
    LogProcessStatus varchar(20),
    primary key(HodId),
    index(StartTime, EndTime)
);

create table if not exists hod_job_digest_template (
    timestamp timestamp default 0,
    HodID VARCHAR(20),
    UserID VARCHAR(20),
    host int,
    load_15 double, 
    load_5 double,
    load_1 double,
    task_total double,
    task_running double,
    task_sleep double,
    task_stopped double,
    task_zombie double,
    mem_total double,
    mem_buffers double,
    mem_cached double,
    mem_used double,
    mem_free double,
    eth0_rxerrs double,
    eth0_rxbyts double,
    eth0_rxpcks double,
    eth0_rxdrops double,
    eth0_txerrs double,
    eth0_txbyts double,
    eth0_txpcks double,
    eth0_txdrops double,
    eth1_rxerrs double,
    eth1_rxbyts double,
    eth1_rxpcks double,
    eth1_rxdrops double,
    eth1_txerrs double,
    eth1_txbyts double,
    eth1_txpcks double,
    eth1_txdrops double,
    sda_rkbs double,
    sda_wkbs double,
    sdb_rkbs double,
    sdb_wkbs double,
    sdc_rkbs double,
    sdc_wkbs double,
    sdd_rkbs double,
    sdd_wkbs double,
    cpu_idle_pcnt float,
    cpu_nice_pcnt float,
    cpu_system_pcnt float,
    cpu_user_pcnt float,
    cpu_hirq_pcnt float,
    cpu_sirq_pcnt float,
    iowait_pcnt float,
    mem_buffers_pcnt float,
    mem_used_pcnt float,
    eth0_busy_pcnt float,
    eth1_busy_pcnt float,
    sda_busy_pcnt float,
    sdb_busy_pcnt float,
    sdc_busy_pcnt float,
    sdd_busy_pcnt float,
    swap_used_pcnt float,
    primary key(HodId, timestamp),
    index(timestamp)
); 

create table if not exists user_util_template (
    timestamp timestamp default CURRENT_TIMESTAMP,
    user VARCHAR(20),
    node_total int,
    cpu_unused double,
    cpu_used double,
    cpu_used_pcnt float,
    disk_unused double,
    disk_used double,
    disk_used_pcnt float,
    network_unused double,
    network_used double,
    network_used_pcnt float,
    memory_unused double,
    memory_used double,
    memory_used_pcnt float,
    primary key(user, timestamp),
    index(timestamp)
);

create table if not exists QueueInfo(
    Timestamp timestamp default 0,
    HodID VARCHAR(20),
    Queue VARCHAR(20),
    NumOfMachine smallint unsigned,
    status varchar(1),
    index(Timestamp)
);
