/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.apache.hadoop.chukwa.rest.objects;

// Generated May 28, 2009 3:39:53 PM by Hibernate Tools 3.2.4.GA
import java.sql.Timestamp;

/**
 * HadoopJvm generated by hbm2java
 */
public class HadoopJvm implements java.io.Serializable {
    static final long serialVersionUID = 7972622543014267350L;

    private Timestamp timestamp;
    private String host;
    private String processName;
    private Double gcTimemillis;
    private Double gcCount;
    private Double logError;
    private Double logFatal;
    private Double logInfo;
    private Double logWarn;
    private Double memHeapCommittedM;
    private Double memHeapUsedM;
    private Double memNonHeapCommittedM;
    private Double memNonHeapUsedM;
    private Double threadsBlocked;
    private Double threadsNew;
    private Double threadsRunnable;
    private Double threadsTerminated;
    private Double threadsTimedWaiting;
    private Double threadsWaiting;
    
    public HadoopJvm() {
    }

    public HadoopJvm(Timestamp timestampe) {
	this.timestamp = timestampe;
    }

    public HadoopJvm(Timestamp timestamp, String host, String processName, Double gcTimemillis,
		     Double gcCount, Double logError, Double logFatal, Double logInfo,
		     Double logWarn, Double memHeapCommittedM, Double memHeapUsedM,
		     Double memNonHeapCommittedM, Double memNonHeapUsedM,
		     Double threadsBlocked, Double threadsNew, Double threadsRunnable,
		     Double threadsTerminated, Double threadsTimedWaiting,
		     Double threadsWaiting) {
	this.timestamp = timestamp;
	this.host = host;
	this.processName = processName;
	this.gcTimemillis = gcTimemillis;
	this.gcCount = gcCount;
	this.logError = logError;
	this.logFatal = logFatal;
	this.logInfo = logInfo;
	this.logWarn = logWarn;
	this.memHeapCommittedM = memHeapCommittedM;
	this.memHeapUsedM = memHeapUsedM;
	this.memNonHeapCommittedM = memNonHeapCommittedM;
	this.memNonHeapUsedM = memNonHeapUsedM;
	this.threadsBlocked = threadsBlocked;
	this.threadsNew = threadsNew;
	this.threadsRunnable = threadsRunnable;
	this.threadsTerminated = threadsTerminated;
	this.threadsTimedWaiting = threadsTimedWaiting;
	this.threadsWaiting = threadsWaiting;
    }

    public Timestamp getTimestamp() {
	return this.timestamp;
    }

    public void setTimestamp(Timestamp timestamp) {
	this.timestamp = timestamp;
    }

    public String getHost() {
	return this.host;
    }

    public void setHost(String host) {
	this.host = host;
    }

    public String getProcessName() {
	return this.processName;
    }

    public void setProcessName(String processName) {
	this.processName = processName;
    }

    public Double getGcTimemillis() {
	return this.gcTimemillis;
    }

    public void setGcTimemillis(Double gcTimemillis) {
	this.gcTimemillis = gcTimemillis;
    }

    public Double getGcCount() {
	return this.gcCount;
    }

    public void setGcCount(Double gcCount) {
	this.gcCount = gcCount;
    }

    public Double getLogError() {
	return this.logError;
    }

    public void setLogError(Double logError) {
	this.logError = logError;
    }

    public Double getLogFatal() {
	return this.logFatal;
    }

    public void setLogFatal(Double logFatal) {
	this.logFatal = logFatal;
    }

    public Double getLogInfo() {
	return this.logInfo;
    }

    public void setLogInfo(Double logInfo) {
	this.logInfo = logInfo;
    }

    public Double getLogWarn() {
	return this.logWarn;
    }

    public void setLogWarn(Double logWarn) {
	this.logWarn = logWarn;
    }

    public Double getMemHeapCommittedM() {
	return this.memHeapCommittedM;
    }

    public void setMemHeapCommittedM(Double memHeapCommittedM) {
	this.memHeapCommittedM = memHeapCommittedM;
    }

    public Double getMemHeapUsedM() {
	return this.memHeapUsedM;
    }

    public void setMemHeapUsedM(Double memHeapUsedM) {
	this.memHeapUsedM = memHeapUsedM;
    }

    public Double getMemNonHeapCommittedM() {
	return this.memNonHeapCommittedM;
    }

    public void setMemNonHeapCommittedM(Double memNonHeapCommittedM) {
	this.memNonHeapCommittedM = memNonHeapCommittedM;
    }

    public Double getMemNonHeapUsedM() {
	return this.memNonHeapUsedM;
    }

    public void setMemNonHeapUsedM(Double memNonHeapUsedM) {
	this.memNonHeapUsedM = memNonHeapUsedM;
    }

    public Double getThreadsBlocked() {
	return this.threadsBlocked;
    }

    public void setThreadsBlocked(Double threadsBlocked) {
	this.threadsBlocked = threadsBlocked;
    }

    public Double getThreadsNew() {
	return this.threadsNew;
    }

    public void setThreadsNew(Double threadsNew) {
	this.threadsNew = threadsNew;
    }

    public Double getThreadsRunnable() {
	return this.threadsRunnable;
    }

    public void setThreadsRunnable(Double threadsRunnable) {
	this.threadsRunnable = threadsRunnable;
    }

    public Double getThreadsTerminated() {
	return this.threadsTerminated;
    }

    public void setThreadsTerminated(Double threadsTerminated) {
	this.threadsTerminated = threadsTerminated;
    }

    public Double getThreadsTimedWaiting() {
	return this.threadsTimedWaiting;
    }

    public void setThreadsTimedWaiting(Double threadsTimedWaiting) {
	this.threadsTimedWaiting = threadsTimedWaiting;
    }

    public Double getThreadsWaiting() {
	return this.threadsWaiting;
    }

    public void setThreadsWaiting(Double threadsWaiting) {
	this.threadsWaiting = threadsWaiting;
    }

}
